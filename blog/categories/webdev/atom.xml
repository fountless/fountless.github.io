<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: WebDev | +1 to BI]]></title>
  <link href="http://fountless.github.io/blog/categories/webdev/atom.xml" rel="self"/>
  <link href="http://fountless.github.io/"/>
  <updated>2014-01-13T01:33:40-07:00</updated>
  <id>http://fountless.github.io/</id>
  <author>
    <name><![CDATA[Stu Baker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Customizing Octopress]]></title>
    <link href="http://fountless.github.io/blog/2013/12/13/customizing-octopress/"/>
    <updated>2013-12-13T02:40:21-07:00</updated>
    <id>http://fountless.github.io/blog/2013/12/13/customizing-octopress</id>
    <content type="html"><![CDATA[<p>I recently made a few customizations to my Octopress environment using resources/blog articles scattered about the web; all were surprisingly easy and definitely added value.  Here are my favorites if you want to take a stab at any of these yourself:</p>

<h2><a href="http://arshad.github.io/blog/2012/05/10/recipe-hiding-posts-from-the-octopress-front-page/">Hiding specific categories of posts from the front page</a></h2>

<p>I particularly wanted to do this for my Snippets category, as sometimes I want to take notes or describe the logic of a concept (or simply have a basic example that I can copy in the future), but I don&rsquo;t particularly want that showing up as the top article on my front page either.  Best of both worlds by following the simple changes in this article.</p>

<h2><a href="http://blog.geoffpetrie.com/blog/2012/10/14/octopress-change-the-default-preview-server/">Change the preview server to Ruby Thin Server</a></h2>

<p>I did this trying to solve a different problem; it didn&rsquo;t help then but I liked the server so much that I&rsquo;ve stuck with it. Very easy to get it up and running too.</p>

<h2><a href="http://hiltmon.com/blog/2013/05/08/octopress-now-has-footnotes/">Footnote styling</a></h2>

<p>I really liked the idea of using footnotes for my sources, but by default they are rather gigantic and widely spaced.  Some simple additions to <code>sass/custom/_styles.css</code> and your footnotes look like they are supposed to: compact and well-spaced.  I&rsquo;ll even add an example footnote<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> for you to see what these changes look like.</p>

<h2><a href="http://blog.codebykat.com/2013/05/20/three-octopress-tweaks/#github-aside">Filter repositories from Github sidebar</a></h2>

<p>As the author of that linked post so aptly points out, it doesn&rsquo;t make a lot of sense to show off the repository your blog is on if you are being hosted by Github Pages.  Also, some projects you just don&rsquo;t want to show off, and a few lines of code will make sure they don&rsquo;t appear under the Github Repos of your blog.</p>

<h2><a href="https://github.com/ragle/Monokai-Sublime-Text-Octopress">Use Monokai color scheme for code block syntax highlighting</a></h2>

<p>Seems like lots of people want to slightly alter the built in syntax highlighting.  I like the Monokai theme from Sublime Text 2, and luckily I found a <a href="https://github.com/ragle/Monokai-Sublime-Text-Octopress">nice patch</a> that will switch to that color scheme without much additional work.  You can also find great, detailed posts if you are more interested in the <a href="http://blog.alestanis.com/2013/02/04/octopress-and-the-twilight-color-scheme/">Twilight color scheme</a> or a more <a href="http://blog.codebykat.com/2013/05/23/gorgeous-octopress-codeblocks-with-coderay/">Github-style color scheme</a>.  Keep in mind though that some of these will require you to change your markdown processor and swap in a different syntax highlighter.  I preferred to stick with the default Pygments syntax highlighting and rdiscount markdown processor, and I was lucky to find a great resource already created.  Check out the prettiness:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (sample.js)</span> <a href='/downloads/code/sample.js'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">github</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">showRepos</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">){</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>          <span class="nx">url</span><span class="o">:</span> <span class="s2">&quot;https://api.github.com/users/&quot;</span><span class="o">+</span><span class="nx">options</span><span class="p">.</span><span class="nx">user</span><span class="o">+</span><span class="s2">&quot;/repos?sort=pushed&amp;callback=?&quot;</span>
</span><span class='line'>        <span class="p">,</span> <span class="nx">dataType</span><span class="o">:</span> <span class="s1">&#39;jsonp&#39;</span>
</span><span class='line'>        <span class="p">,</span> <span class="nx">error</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="nx">$</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">target</span> <span class="o">+</span> <span class="s1">&#39; li.loading&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="s2">&quot;Error loading feed&quot;</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">,</span> <span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">repos</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">data</span> <span class="o">||</span> <span class="o">!</span><span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>          <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">skip_forks</span> <span class="o">&amp;&amp;</span> <span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">fork</span><span class="p">)</span> <span class="p">{</span> <span class="k">continue</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span> <span class="nx">jQuery</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span> <span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">name</span><span class="p">,</span> <span class="nx">options</span><span class="p">.</span><span class="nx">skip_repos</span> <span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="k">continue</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>            <span class="nx">repos</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">count</span><span class="p">)</span> <span class="p">{</span> <span class="nx">repos</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">count</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>          <span class="nx">render</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span> <span class="nx">repos</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">})();</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2><a href="http://blog.jonathanrwallace.com/blog/2013/09/21/octopress-love-twitter-update/">Add tweets to the sidebar without the ugly widget</a></h2>

<p>I don&rsquo;t tweet a lot, but when I do, I want them to look like they belong on the page.  After Twitter changed its API to require authentication, it effectively got dropped from Octopress.  But a <a href="https://github.com/imathis/octopress/pull/1311">nice Github contributor</a> figured out a way to continue displaying tweets.  Essentially, you create a Twitter widget and pull out the data-widget-id from the generated code and plop that into the _config.yaml file.  Looks great on the sidebar too!</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>I really like these footnotes.  You can even put <code>code blocks</code> in them and everything.  Great place to put <a href="http://imgur.com/r/cats/YYYC3bW">ancillary links</a> that people may or may not care to look at/read.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Generating Empty Html Pages]]></title>
    <link href="http://fountless.github.io/blog/2013/11/25/octopress-generating-empty-html-pages/"/>
    <updated>2013-11-25T22:05:19-07:00</updated>
    <id>http://fountless.github.io/blog/2013/11/25/octopress-generating-empty-html-pages</id>
    <content type="html"><![CDATA[<p>So you probably just tried a <code>rake generate</code> on your Octopress blog only to end up with a blank index.html in your public folder and a few empty posts in your blog folder, ya?</p>

<p>When this occurred for me, the problem happened right as I started trying out the fancy syntax highlighting for code blocks.  Posts with plain vanilla code blocks generated just fine, but as soon as I added languages for highlighting at the start of each block I saw empty posts/pages.  After many searches for almost every synonym of &lsquo;empty&rsquo; you can think of, I finally solved my problem through a combination of the following:</p>

<h2>Check if Python is installed</h2>

<p>&ldquo;But Octopress is in Ruby, why do I need Python?&rdquo;  Octopress uses <a href="http://pygments.org/">Pygments</a> for syntax highlighting, which is built in Python, and it uses the pygments.rb gem to use said Python file.</p>

<h2>Ensure Pygments is installed in Python</h2>

<p>This was one of my problems.  I already had Python from some earlier messing around, but didn&rsquo;t know I needed to separately download Pygments and install it.  Well, ya do.  Here&rsquo;s the <a href="http://pygments.org/download/">download site</a>, or you can use some <code>easy_install</code> fanciness if you prefer.</p>

<h2>Make sure your PATH for Python is set correctly</h2>

<p>Another one of my problems.  I happened upon this from a <a href="http://stackoverflow.com/a/14202515/1657324">stackoverflow user having similar problems with code blocks</a>.  Here are some good instructions for <a href="http://stackoverflow.com/a/4855685/1657324">updating PATH in Windows</a> from another SO question, and yet another SO answer on <a href="http://stackoverflow.com/a/12592280/1657324">possible mistakes when updating PATH</a>.  Most useful to me: be sure to <strong>exit and restart the window you are testing in</strong>.  I didn&rsquo;t do that, and it caused a lot more headaches.</p>

<h2>Update pygments.rb to a newer version</h2>

<pre><code>bundle update pygments.rb
</code></pre>

<p>Not sure if I really needed to do this, but one of my searches led me to this <a href="http://stackoverflow.com/a/14088936/1657324">SO answer on octopress generating blank files</a>, and figured updating pygments.rb couldn&rsquo;t hurt.  Running the above resulted in pygments.rb updating from 0.3.4 to 0.3.7.  I then updated the version in my Gemfile in the octopress main folder and was good to go.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p>Doing all this did not initially solve my problem, because I never exited my command-line window to let my PATH do its magic.  But the next day everything was working again, and I was scratching my head (until I found that comment on closing and re-opening the window). Hopefully something here will help you with this horrible problem!</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>incidentally, I am so new to Ruby I didn&rsquo;t know how to update a Gemfile.  If you are in the same boat, just open Gemfile in a text editor to see all the gems Octopress is using and their version.  When you update a gem with <code>bundle update</code>, you download the new version but also keep a copy of the old version in your gems folder.  So to update what Octopress uses, you need to update the version number in your Gemfile<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With Octopress: On Windows and With No Ruby Experience?!]]></title>
    <link href="http://fountless.github.io/blog/2013/11/20/getting-started-octopress-windows-no-ruby/"/>
    <updated>2013-11-20T22:48:35-07:00</updated>
    <id>http://fountless.github.io/blog/2013/11/20/getting-started-octopress-windows-no-ruby</id>
    <content type="html"><![CDATA[<p>So you just found <a href="http://octopress.org/">Octopress</a> where you can write in <a href="http://daringfireball.net/projects/markdown/syntax">Markdown</a> and get awesome free hosting for your static html via <a href="http://pages.github.com/">Github pages</a>. But it&rsquo;s built with Ruby and you are on Windows, can you still make this work?</p>

<p>Yes, with a little patience you definitely can! I am just getting my blog up on Octopress and thought I&rsquo;d help by documenting a couple of the <em>gotchas</em> you may run into.</p>

<p>Head over to the <a href="http://octopress.org/docs/setup/">Octopress setup page</a> to give you an outline of what you need to do.</p>

<p>As the setup page mentions, first you&rsquo;ll need to install Git if you don&rsquo;t already have it. I recommend the <a href="http://msysgit.github.io/">msysgit</a> as it comes with a  very convenient Git Bash console. If you&rsquo;re unsure which installation settings to select, see the <a href="https://help.github.com/articles/set-up-git">setup page on github</a> and click the &ldquo;Not sure what to pick on each screen?&rdquo; info box. Then head over to the <a href="https://help.github.com/articles/generating-ssh-keys">generating SSH keys</a> page to make sure you can connect to Github.</p>

<p>Back to the Octopress setup guide, the next step is to install Ruby 1.9.3 or greater. Since we&rsquo;ve got Windows awesomeness going on, you will want to get the <a href="http://rubyinstaller.org/downloads/">RubyInstaller for Windows</a>. After installation you will now have the Start Command Prompt with Ruby which you can run Ruby commands on.</p>

<p>Next clone the Octopress project so you have a local copy and change to that directory using your Start Command Prompt with Ruby. Here is about the point where I ran into some problems.  The setup guide has you install dependencies, so you run:</p>

<p><code>
gem install bundler
bundle install
</code></p>

<p>But if you are lucky like me when running <code>bundle install</code> you get an error about native extensions and that you need the Development Kit.  Head on over to the <a href="https://github.com/oneclick/rubyinstaller/wiki/Development-Kit">RubyInstaller Dev Kit page</a> and follow their instructions for downloading and installing the Dev Kit. After that&rsquo;s done, change directories back to Octopress and run those two Ruby commands again, which should both complete this time.</p>

<p>Following the guide, you are now ready to run the next bit <code>rake install</code> and, of course, that doesn&rsquo;t work either.  If you&rsquo;re like me and <a href="http://stackoverflow.com/q/12400185/1657324">this guy at stackoverflow</a>, you got a:</p>

<p><code>
rake aborted!
No such file or directory - git remote -v
</code></p>

<p>which <a href="http://stackoverflow.com/a/12401196/1657324">the question answerer points out</a> is a PATH problem. Following his link will lead to a <a href="http://stackoverflow.com/a/9793850">short and sweet description on updating your PATH</a>.  The basic problem here is that Ruby can&rsquo;t find git, and you will be updating your PATH so it can find it in the future. After the update, run that <code>rake install</code> again and it works! Hooray!</p>

<p>Now jump on over to <a href="http://octopress.org/docs/deploying/github/">deploying to Github pages</a> and follow the instructions to get your Octopress pages pushed up to a Pages site.  Those instructions are perfect and caused me no problems so I won&rsquo;t bother going into them.</p>

<p>One last gotcha: you will generally use the two commands listed on that page <code>rake generate</code> and <code>rake deploy</code> to generate your markdown to html and push them up to Github, but one other command you&rsquo;ll definitely want to use is <code>rake preview</code> which will mount a webserver for you to view your site before pushing it live.  <a href="http://octopress.org/docs/blogging/">The Octopress docs</a> say your webserver is mounted at <a href="http://localhost:4000,">http://localhost:4000,</a> which it is, but if it&rsquo;s late and your brain&rsquo;s not working right like mine and <a href="http://stackoverflow.com/q/17465404">this stackoverflow user&rsquo;s</a>, you may try that path exactly and wonder why nothing is showing up.  If you deployed to a Github Project Page, the generated files you are trying to see are in /public/ProjectName, so you will need to add your project&rsquo;s name to the URL to see the preview (a la <a href="http://localhost:4000/ProjectName">http://localhost:4000/ProjectName</a>).</p>

<p>Hope some of that helps my Windows friends out there; happy blogging!</p>
]]></content>
  </entry>
  
</feed>
